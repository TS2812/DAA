#include <stdio.h> 
#include <stdlib.h> 
struct Edge { 
    int src, dest, weight;
}; 
void KruskalMST(struct Edge* edges, int V, int E) 
{
    int s=0; 
    for (int i = 0; i < E - 1; ++i) { 
        for (int j = 0; j < E - i - 1; ++j) 
        { 
            if (edges[j].weight > edges[j + 1].weight) 
            { 
                struct Edge temp = edges[j]; 
                edges[j] = edges[j + 1]; 
                edges[j + 1] = temp; 
            } 
        } 
    } 
    int parent[V]; 
    for (int i = 0; i < V; ++i)
    {
        parent[i] = i;
    }
    printf("Edges in MST:\n"); 
    for (int i = 0, e = 0; e < V - 1; ++i) 
    {
        int srcRoot = edges[i].src;
        while (srcRoot != parent[srcRoot])
        {
            srcRoot = parent[srcRoot]; 
        }
        int destRoot = edges[i].dest; 
        while (destRoot != parent[destRoot])
        {
            destRoot = parent[destRoot]; 
        }
        if (srcRoot != destRoot) 
        { 
            printf("%d -- %d == %d\n", edges[i].src, edges[i].dest, edges[i].weight); 
            parent[srcRoot] = destRoot;
            ++e; 
        } 
        s=s+edges[i].weight; 
    } 
    printf("\nTotal Weight = %d",s); 
} 
int main() 
{
    int V = 5; 
    int E = 7;
    struct Edge edges[] = 
    {   {0, 1, 2}, 
        {0, 3, 6}, 
        {1, 2, 3}, 
        {1, 3, 8}, 
        {1, 4, 5}, 
        {2, 4, 7}, 
        {3, 4, 9} 
    }; 
    KruskalMST(edges, V, E); 
    return 0; 
}
